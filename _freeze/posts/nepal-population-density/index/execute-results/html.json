{
  "hash": "0dfa5c5962993d566de2033f29baaf63",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"3D Population Density Mapping of Nepal\"\nsubtitle: \"Using Rayshader for Advanced Geospatial Visualization\"\nauthor:\n  - name: Pukar Bhandari\n    email: pukar.bhandari@outlook.com\ndate: \"2023-01-03\"\ncategories: [R, GIS, Data Science]\ndraft: false\nexecute:\n  eval: false\n---\n\n## Project Overview\n\nThis analysis demonstrates advanced geospatial visualization techniques using R's rayshader package to create a stunning 3D population density map of Nepal. The project showcases the integration of high-resolution population data with topographic visualization methods, resulting in an interactive and informative representation of demographic patterns across Nepal's diverse terrain.\n\n**Key Technologies**: R, rayshader, sf, stars, magick\\\n**Data Source**: Kontur Population Dataset (400m H3 hexagon resolution)\\\n**Projection**: ESRI:102306 (Nepal Nagarkot TM)\n\n## Environment Setup\n\n### Package Installation and Loading\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Package Installation (Run Once)\"}\n# Core packages for geospatial analysis\ninstall.packages(c(\"tidyverse\", \"sf\", \"tmap\", \"ggplot2\", \"mapview\", \"stars\"))\n\n# Visualization packages\ninstall.packages(c(\"rayshader\", \"MetBrewer\", \"colorspace\", \"rayrender\", \"magick\"))\n\n# Font handling\ninstall.packages(\"extrafont\")\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required libraries\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(tmap)\nlibrary(ggplot2)\nlibrary(mapview)\nlibrary(stars)\nlibrary(rayshader)\nlibrary(MetBrewer)\nlibrary(colorspace)\nlibrary(rayrender)\nlibrary(magick)\nlibrary(extrafont)\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Configure 3D rendering\noptions(rgl.useNULL = FALSE)\n\nproject_crs <- \"ESRI:102306\"\n```\n:::\n\n\n## Data Acquisition and Loading\n\n### Population Hexagon Data\n\nThe analysis utilizes high-resolution population data from Kontur, provided in H3 hexagonal grid format at 400-meter resolution. This dataset offers superior granularity compared to traditional administrative boundary-based population estimates.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load population data (H3 hexagons at 400m resolution)\nnep_hex <- sf::st_read(\n  paste0(\n    \"/vsizip/\",\n    \"data/kontur_population_NP_20220630.gpkg.gz/kontur_population_NP_20220630.gpkg\"\n  )\n) |>\n  sf::st_transform(project_crs)\n\n# Load administrative boundaries\nnep_admin <- sf::st_read(\n  paste0(\n    \"/vsizip/\",\n    \"data/kontur_boundaries_NP_20220407.gpkg.gz/kontur_boundaries_NP_20220407.gpkg\"\n  )\n) |>\n  sf::st_transform(project_crs)\n\n# Create unified Nepal boundary\nnepal_boundary <- nep_admin |>\n  sf::st_geometry() |>\n  sf::st_union() |>\n  sf::st_sf() |>\n  sf::st_make_valid()\n```\n:::\n\n\n::: callout-note\n**Data Sources**:\\\n- **Population Data**: [Kontur Population Dataset](https://data.humdata.org/dataset/kontur-population-nepal)\\\n- **Administrative Boundaries**: [Kontur Boundaries Dataset](https://data.humdata.org/dataset/kontur-boundaries-nepal)\\\n- **Coordinate Reference System**: EPSG:6207 for accurate representation of Nepal's geography\n:::\n\n## Data Processing and Visualization Setup\n\n### Initial Data Exploration\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Preliminary visualization to verify data quality\nggplot(nep_hex) + \n  geom_sf(aes(fill = population), color = \"gray66\", linewidth = 0) +\n  geom_sf(data = nepal_boundary, fill = NA, color = \"black\", \n          linetype = \"dashed\", linewidth = 1) +\n  theme_minimal() +\n  labs(title = \"Nepal Population Distribution\",\n       fill = \"Population\")\n```\n:::\n\n\n### Raster Conversion and Matrix Preparation\n\nThe conversion from vector hexagon data to raster format is essential for rayshader's 3D rendering capabilities. This process involves calculating optimal dimensions while preserving the geographic aspect ratio.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate bounding box and aspect ratio\nbbox <- st_bbox(nepal_boundary)\n\n# Define corner points for aspect ratio calculation\nbottom_left <- st_point(c(bbox[[\"xmin\"]], bbox[[\"ymin\"]])) |>\n  st_sfc(crs = 6207)\nbottom_right <- st_point(c(bbox[[\"xmax\"]], bbox[[\"ymin\"]])) |>\n  st_sfc(crs = 6207)\ntop_left <- st_point(c(bbox[[\"xmin\"]], bbox[[\"ymax\"]])) |>\n  st_sfc(crs = 6207)\n\n# Calculate dimensions\nwidth <- st_distance(bottom_left, bottom_right)\nheight <- st_distance(bottom_left, top_left)\n\n# Determine aspect ratios\nif(width > height) {\n  w_ratio <- 1\n  h_ratio <- height / width\n} else {\n  h_ratio <- 1\n  w_ratio <- width / height\n}\n\n# Convert to raster with optimal resolution\nsize <- 1000 * 2.5\n\npop_raster <- st_rasterize(nep_hex,\n                          nx = floor(size * w_ratio),\n                          ny = floor(size * h_ratio))\n\n# Create matrix for 3D rendering\npop_matrix <- matrix(pop_raster$population,\n                    nrow = floor(size * w_ratio),\n                    ncol = floor(size * h_ratio))\n```\n:::\n\n\n## Color Scheme Development\n\n### MetBrewer Color Palette Selection\n\nThe visualization employs the \"OKeeffe2\" palette from MetBrewer, chosen for its warm earth tones that effectively represent population density while maintaining visual appeal and accessibility.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Generate color palette\ncolor <- met.brewer(\"OKeeffe2\")\n\n# Create texture gradient with bias toward higher values\ntexture <- grDevices::colorRampPalette(color, bias = 3)(256)\n\n# Preview color scheme\nswatchplot(texture)\n```\n:::\n\n\n## 3D Visualization Rendering\n\n### Interactive 3D Display\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Close any existing RGL windows\nrgl::rgl.close()\n\n# Generate 3D visualization\npop_matrix |>\n  height_shade(texture = texture) |>\n  plot_3d(heightmap = pop_matrix,\n          zscale = 250 / 2.5,\n          solid = FALSE,\n          shadowdepth = 0)\n\n# Set optimal camera position\nrender_camera(theta = 0,\n              phi = 30,\n              zoom = 0.4,\n              fov = 90)\n```\n:::\n\n\n### High-Quality Rendering\n\nThe final rendering process utilizes rayshader's advanced lighting system to create publication-ready visualizations with professional-grade quality and resolution.\n\n\n::: {.cell}\n\n```{.r .cell-code}\noutfile <- \"Plots/final_plot.png\"\n\n# Render high-quality image with timing\n{\n  start_time <- Sys.time()\n  cat(crayon::cyan(\"Rendering started:\", start_time), \"\\n\")\n  \n  # Ensure output directory exists\n  if(!file.exists(outfile)) {\n    png::writePNG(matrix(1), target = outfile)\n  }\n\n  render_highquality(\n    filename = outfile,\n    interactive = FALSE,\n    lightdirection = 225,\n    lightaltitude = c(20, 80),\n    lightcolor = c(color[2], \"white\"),\n    lightintensity = c(600, 100),\n    width = 1980,\n    height = 1080,\n    samples = 300\n  )\n\n  end_time <- Sys.time()\n  diff <- end_time - start_time\n  cat(crayon::cyan(\"Rendering completed in:\", diff), \"\\n\")\n}\n```\n:::\n\n\n## Post-Processing and Annotation\n\n### Geographic Labeling\n\nThe final step enhances the visualization with strategic city labels and professional annotation using the magick package for image manipulation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load rendered image\npop_raster <- image_read(\"Plots/final_plot.png\")\n\n# Define text styling\ntext_color <- darken(color[7], .5)\n\n# Add comprehensive annotations\npop_raster |>\n  image_annotate(\"NEPAL\",\n                 gravity = \"northeast\",\n                 location = \"+50+50\",\n                 color = text_color,\n                 size = 150,\n                 font = \"Ananda Namaste\",\n                 weight = 700) |>\n  image_annotate(\"POPULATION DENSITY MAP\",\n                 gravity = \"northeast\",\n                 location = \"+50+200\",\n                 color = text_color,\n                 size = 36.5,\n                 font = \"FuturaBT-Medium\",\n                 weight = 500) |>\n  # Major urban centers\n  image_annotate(\"Kathmandu\",\n                 gravity = \"center\",\n                 location = \"+250-50\",\n                 color = alpha(text_color, .8),\n                 size = 30,\n                 font = \"FuturaBT-Medium\") |>\n  image_annotate(\"Pokhara\",\n                 gravity = \"center\",\n                 location = \"-30+35\",\n                 color = alpha(text_color, .8),\n                 size = 25,\n                 font = \"FuturaBT-Medium\") |>\n  image_annotate(\"Biratnagar\",\n                 gravity = \"east\",\n                 location = \"+125+100\",\n                 color = alpha(text_color, .8),\n                 size = 28,\n                 font = \"FuturaBT-Medium\") |>\n  image_annotate(\"Birgunj\",\n                 gravity = \"center\",\n                 location = \"+130+100\",\n                 color = alpha(text_color, .8),\n                 size = 25,\n                 font = \"FuturaBT-Medium\") |>\n  # Regional centers\n  image_annotate(\"Nepalgunj\",\n                 gravity = \"center\",\n                 location = \"-450+0\",\n                 color = alpha(text_color, .8),\n                 size = 24,\n                 font = \"FuturaBT-Medium\") |>\n  image_annotate(\"Janakpur\",\n                 gravity = \"east\",\n                 location = \"+500+140\",\n                 color = alpha(text_color, .8),\n                 size = 22,\n                 font = \"FuturaBT-Medium\") |>\n  # Additional urban areas\n  image_annotate(\"Itahari\\nSurkhet\\nTikapur\\nDhangadhi\\nBharatpur\\nButwal\\nGhorahi\\nTulsipur\",\n                 gravity = \"southwest\",\n                 location = \"+20+100\",\n                 color = alpha(text_color, .6),\n                 size = 16,\n                 font = \"FuturaBT-Medium\") |>\n  # Professional attribution\n  image_annotate(\"Visualization by: [Your Name] with Rayshader(@tylermorganwall) | Data: Kontur Population (Released 2022-06-30)\",\n                 gravity = \"southwest\",\n                 location = \"+20+20\",\n                 color = alpha(text_color, .6),\n                 font = \"FuturaBT-Medium\",\n                 size = 20) |>\n  image_write(\"Plots/final_plot_edited.png\", format = \"png\", quality = 100)\n```\n:::\n\n\n## Technical Methodology\n\n### Spatial Data Processing Pipeline\n\n1.  **Data Transformation**: Vector hexagon data converted to standardized coordinate reference system (EPSG:6207)\n2.  **Rasterization**: Optimal grid resolution calculated to balance detail with computational efficiency\n3.  **Matrix Conversion**: Raster data transformed into height matrix for 3D rendering\n4.  **Texture Mapping**: Population values mapped to color gradients using perceptually uniform color spaces\n\n### Rendering Specifications\n\n-   **Resolution**: 1980×1080 pixels for high-definition output\n-   **Sampling**: 300 samples for anti-aliasing and smooth gradients\n-   **Lighting**: Dual-source lighting system (directional + ambient)\n-   **Z-Scale**: Optimized vertical exaggeration (250/2.5) for clear population peaks\n\n## Results and Applications\n\nThis methodology produces publication-quality 3D population density visualizations suitable for:\n\n-   **Urban Planning**: Identifying population clusters and growth patterns\n-   **Infrastructure Development**: Targeting high-density areas for transportation networks\n-   **Emergency Response**: Understanding population distribution for resource allocation\n-   **Academic Research**: Visual communication of demographic data\n\n## Environment Management\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Save complete workspace for future analysis\nsave.image(file.path(path, \"nep_pop.RData\"))\n```\n:::\n\n\n## Conclusion\n\nThis workflow demonstrates the power of combining modern R packages for geospatial analysis with advanced 3D visualization techniques. The resulting maps provide intuitive understanding of Nepal's population distribution patterns, highlighting the concentration of people in the Terai region and major urban centers while showcasing the relatively sparse population in mountainous areas.\n\nThe methodology is transferable to other geographic contexts and can be adapted for various demographic or infrastructure planning applications in transportation and urban development projects.\n\n------------------------------------------------------------------------\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}